<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle = 0;
theta = 0;
radius = 150;

z = 0;

d3d_start();
d3d_set_lighting(true)
d3d_set_shading(true); 
d3d_light_define_point(0, x - 500, y - 500, z - 600, 1500, c_white);
d3d_light_enable(0, true);
d3d_light_define_point(1, x + 500, y + 500, z - 600, 1500, c_white);
d3d_light_enable(1, true);
//d3d_light_define_ambient(c_gray);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>



angle -= keyboard_check(vk_right)-keyboard_check(vk_left);
theta -= keyboard_check(vk_up)-keyboard_check(vk_down);

xx = lengthdir_x(1, angle) * lengthdir_x(1, theta) * radius;
yy = lengthdir_y(1, theta) * radius; 
zz = lengthdir_x(1, angle+90) * lengthdir_x(1, theta) * radius;

draw_set_color(c_green);
d3d_draw_ellipsoid(x-5, y-5, z-5, x+5, y+5, z+5, -1, 1, 1, 16);
d3d_draw_ellipsoid(x-radius, y-radius, z-radius, x+radius, y+radius, z+radius, -1, 1, 1, 16);
draw_set_color(c_blue);
d3d_draw_ellipsoid(x-5+xx, y-5+yy, z-5+zz, x+5+xx, y+5+yy, z+5+zz, -1, 1, 1, 16);

d3d_set_projection(x, y+1, z-500, x, y, z, 0, 0, -1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
