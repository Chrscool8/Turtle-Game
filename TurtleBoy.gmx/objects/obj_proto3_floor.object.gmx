<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite12</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_start();

z = 0;

/*d3d_set_lighting(true);
d3d_set_shading(true);

d3d_light_define_point(0, x, y, z - 300, 300, c_white);
d3d_light_enable(0, true);*/

turtle_x = 0;
turtle_y = 0;
turtle_rot = 0;

cam_x = 0;
cam_y = 0;
cam_rot = 90;

//d3d_set_culling(true);
d3d_set_hidden(true);
draw_set_alpha_test(true);
draw_set_alpha_test_ref_value(128);

image_speed = .25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turtle_x += keyboard_check(vk_right)-keyboard_check(vk_left);
turtle_y -= keyboard_check(vk_up)-keyboard_check(vk_down);

cam_x += keyboard_check(ord("D"))-keyboard_check(ord("A"));
cam_y -= keyboard_check(ord("W"))-keyboard_check(ord("S"));
cam_rot -= keyboard_check(ord("E"))-keyboard_check(ord("Q"));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(20, 20, string(fps)+":"+string(fps_real));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var cam_off_x = lengthdir_x(250, cam_rot+180);
var cam_off_y = lengthdir_y(250, cam_rot+180);

d3d_set_projection(cam_x + cam_off_x, cam_y + cam_off_y, z + 175, cam_x, cam_y, z, 0, 0, 1);

if not keyboard_check(vk_shift)
shader_set(shd_ball);
//d3d_draw_floor(x - 128, y - 128, z, x + 128, y + 128, z, sprite_get_texture(spr_test_floor, 0), 16, 16);
var num = 10;
var size = 64;

var shparam = shader_get_uniform(shd_ball, "center");
shader_set_uniform_f(shparam, cam_x, cam_y, z);
//shparam = shader_get_uniform(shd_distort, "origin");
//shader_set_uniform_f(shparam, cam_x, cam_y);

for (var xx=-num; xx&lt;num; xx+=1)
{
    for (var yy=-num; yy&lt;num; yy+=1)
    {
        var sizexx = x+size*xx;
        var sizeyy = y+size*yy;
        
        if (point_distance(sizexx, sizeyy, cam_x - cam_off_x/2, cam_y - cam_off_y/2) &lt; 400)
        {
            if (yy &gt; -num+4)
                d3d_draw_floor(sizexx-size/2, sizeyy-size/2, z, sizexx+size/2, sizeyy+size/2, z, sprite_get_texture(spr_test_floor, abs(xx*xx+yy*yy)), 1, 1);
            else
                d3d_draw_floor(sizexx-size/2 - (current_time/100 mod size), sizeyy-size/2, z, sizexx+size/2 - (current_time/100 mod size), sizeyy+size/2, z, sprite_get_texture(spr_water, 0), 1, 1);
        }
    }
}


//d3d_draw_ellipsoid(x + turtle_x - 15, y+turtle_y - 15, z - 15, x+turtle_x + 15, y+turtle_y + 15, z + 15, sprite_get_texture(spr_test_turtle_tex, 0), 1, 1, 24);

d3d_transform_set_identity();
d3d_transform_add_rotation_x(-45);
d3d_transform_add_rotation_z(cam_rot-90);
d3d_transform_add_translation(x+turtle_x, y+turtle_y, .1);
shader_set_uniform_f(shparam, cam_x-(x+turtle_x), cam_y-(y+turtle_y), z);
d3d_draw_wall(-32, -4, 64, 32, -4, 0, sprite_get_texture(sprite_index, image_index), 1, 1);
d3d_transform_set_identity();
d3d_transform_add_scaling(2.5, 2.5, 1);
d3d_transform_add_translation(x+turtle_x, y+turtle_y-8, .01);
draw_set_alpha(.6)
//d3d_draw_floor(-8, -8, 0, 8, 8, 0, sprite_get_texture(spr_shadow, 0), 1, 1);
draw_set_alpha(1)
d3d_transform_set_identity();
//draw_set_color(c_green);

//draw_set_color(c_white);

shader_reset();

d3d_transform_set_identity();
d3d_transform_add_rotation_z(current_time/10000);
d3d_transform_add_translation(cam_x, cam_y, -500);
d3d_draw_cylinder(-5000, -5000, 0, 5000, 5000, -1900, sprite_get_texture(spr_sky, 0), 1, 1, false, 32);
d3d_transform_set_identity();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
