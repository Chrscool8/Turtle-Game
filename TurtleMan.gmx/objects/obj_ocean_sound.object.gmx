<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_listener_set_position(0, 0, 0, 0);
audio_listener_set_orientation(0, 0, 0, 1000, 0, 1, 0);

emitter = audio_emitter_create();
//audio_emitter_falloff(emitter, 50, 200, 1);
//audio_falloff_set_model(audio_falloff_exponent_distance_clamped);
audio_play_sound_on(emitter, snd_amb_ocean, true, 1);

emitter2 = audio_emitter_create();
audio_play_sound_on(emitter2, snd_amb_waves, true, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir = 90;

if (instance_exists(obj_camera))
    dir = obj_camera.cam_rot;
    
var vol = 1;
if (instance_exists(obj_turtle) and instance_exists(obj_generator))
    vol = sqr(1 - (obj_turtle.y / (obj_generator.map_height * obj_generator.tile_size)));
        
var dis = 250;
audio_emitter_gain(emitter, vol/2+.5);
audio_emitter_position(emitter, lengthdir_x(dis, dir), -lengthdir_y(dis, dir), 0);

audio_emitter_gain(emitter2, vol/2);
audio_emitter_position(emitter2, lengthdir_x(dis, dir), -lengthdir_y(dis, dir), 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
