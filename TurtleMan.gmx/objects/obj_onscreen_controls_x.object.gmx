<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_type != os_android and os_type != os_ios)
   instance_destroy()


joystick_x = 90
joystick_y = window_get_height()-200
joystick_radius = 60
joystick_offset = lengthdir_x(joystick_radius, 45)

joystick_x_at = 0
joystick_y_at = 0

direction_pushed = -1
jump_pressed = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_turtle))
{
    joystick_y = window_get_height()-200
    
    joystick_x_at = 0;
    joystick_y_at = 0;
    
    direction_pushed = -1;
    jump_pressed = false;
    
    keyboard_key_release(vk_left);
    keyboard_key_release(vk_right);
    keyboard_key_release(vk_up);
    keyboard_key_release(vk_down);
    keyboard_key_release(vk_space);
    
    for (var i=0; i&lt;5; i+=1)
    {
        if device_mouse_check_button(i, mb_left)
        {
            _x = device_mouse_x_to_gui(i);
            _y = device_mouse_y_to_gui(i);
            
            var joy_dis = point_distance(_x, _y, joystick_x, joystick_y);
                            
            if (joy_dis &lt; joystick_radius)
            {
                joystick_x_at = _x;
                joystick_y_at = _y;
                                                
                var joy_dir = point_direction(_x, _y, joystick_x, joystick_y);
                
                if (joy_dir &lt; 45 or joy_dir &gt;= 315)
                   direction_pushed = vk_left;
                else if (joy_dir &gt;= 45 and joy_dir &lt; 135)
                   direction_pushed = vk_down;
                else if (joy_dir &gt;= 135 and joy_dir &lt; 225)
                   direction_pushed = vk_right;
                else if (joy_dir &gt;= 225 and joy_dir &lt; 315)
                   direction_pushed = vk_up;
            }
            
            if (point_in_circle(_x, _y, window_get_width()-joystick_x, joystick_y, joystick_radius))
            {
                jump_pressed = true;        
            }
            
            if (point_in_rectangle(_x, _y, -100 + view_wview/2, 20, 100 + view_wview/2, 60))
            {
                keyboard_key_press(vk_escape)
                keyboard_key_release(vk_escape)
            }
        }
    }
    

   keyboard_key_press(direction_pushed);
   if (jump_pressed) keyboard_key_press(vk_space);
           
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_turtle))
{
    draw_set_color(c_black)
    draw_circle(joystick_x, joystick_y, joystick_radius, true)
    draw_line(joystick_x-joystick_offset, joystick_y-joystick_offset, joystick_x+joystick_offset, joystick_y+joystick_offset)
    draw_line(joystick_x+joystick_offset, joystick_y-joystick_offset, joystick_x-joystick_offset, joystick_y+joystick_offset)
    
    if (direction_pushed != -1)
        draw_circle(joystick_x_at, joystick_y_at, joystick_radius/5, true)
    
    draw_circle(window_get_width()-joystick_x, joystick_y, joystick_radius, true)
    
    draw_set_valign(fa_top)
    draw_text(5, 860, "real fps: "+string(fps_real)+"#fps: "+string(fps))
    
    draw_roundrect( - 100 + view_wview/2, 20,  + 100 + view_wview/2, 60, true)
    draw_set_color(c_white)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="119">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
